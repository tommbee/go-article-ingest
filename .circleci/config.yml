version: 2

references:

  google_sdk_config: &google_sdk_config
    docker:
      - image: google/cloud-sdk

  terraform_config: &terraform_config
    docker:
      - image: hashicorp/terraform:light

  terraform_init: &terraform_init
    run:
      name: terraform init
      command: |
        echo $GCLOUD_SERVICE_KEY > auth.json
        terraform init -input=false -backend-config="credentials=auth.json" terraform

jobs:
  ## Compile the app
  build:
    <<: *google_sdk_config
    steps:
      - checkout
      - run: chmod +x ./deployment/build.sh
      - run: bash ./deployment/build.sh
      - persist_to_workspace:
          root: .
          paths:
            - site-config
  ## Push to the docker repo
  tag:
    machine: true
    steps:
      - checkout
      - attach_workspace:          
          at: . 
      - run: cp site-config/${CONFIG_FILENAME} ./${CONFIG_FILENAME}
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build --build-arg CONFIG_FILENAME=${CONFIG_FILENAME} -t $DOCKER_IMAGE_URL:$CIRCLE_SHA1 .
      - run: docker push $DOCKER_IMAGE_URL:$CIRCLE_SHA1
  ## Run unit tests
  test:
    docker:
      - image: circleci/golang:1.8
    working_directory: /go/src/github.com/tommbee/go-article-ingest
    steps:
      - checkout
      - run: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      - run: dep ensure
      - run: go get
      - run: go test
  ## Provision cluster
  provision:
    <<: *terraform_config
    steps:
      - checkout
      - *terraform_init
      - run:
          name: terraform plan
          command: |
            cd terraform
            #echo $GCLOUD_SERVICE_KEY > ../auth.json
            terraform plan \
            -var "config_file=../auth.json" \
            -var "image_repository=${DOCKER_IMAGE_URL}" \
            -var "image_tag=${CIRCLE_SHA1}" \
            -var "sources=${SOURCES}" \
            -var "server=${SERVER}" \
            -var "db=${DB}" \
            -var "config_file_location=${CONFIG_LOCATION}" \
            -var "article_collection=${ARTICLE_COLLECTION}" \
            -var "db_user=${DB_USER}" \
            -var "db_password=${DB_PASSWORD}" \
            -var "auth_db=${AUTH_DB}" \
            -var "db_ssl=${DB_SSL}" \
            -var "namespace=${NAMESPACE}" \
            -out=../terraform.plan
      - persist_to_workspace:
          root: .
          paths:
            - terraform.plan
            - auth.json
  ## Deploy cluster and app
  deploy:
    <<: *terraform_config
    steps:
      - checkout
      - *terraform_init
      - attach_workspace:
          at: .
      - run:
          name: terraform apply
          command: |
            cd terraform
            terraform apply --auto-approve ../terraform.plan

workflows:

  version: 2
  untagged-build:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore: master
      - test:
          requires:
            - build
  tagged-build:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
      - tag:
          requires:
            - build
      - test:
          requires:
            - build
      - hold:
          type: approval
          requires:
            - tag
            - test
      - provision:
          requires:
            - hold
      - deploy:
          requires:
            - provision
